Задание 3.1 (2 балла). Написать программу, бесконечно выводящую в файл 1 раз в секунду значение внутреннего счетчика (1 2 3 ...). Запустить ее в фоновом режиме (myprogram &). Узнать идентификатор процесса и протестировать команды управления (SIGINT, SIGQUIT, SIGABRT, SIGKILL, SIGTERM, SIGTSTP, SIGSTOP, SIGCONT).
Сделанно две программы, одна использует буферизованный ввод(3_1_buff.c), вторая не буферизованный ввод(3_1.c), на примере с сигналом SIGINT выясненно, что буферизованный ввод не записывает в файл в случае прерывания выполнения программы, в отличие от не буферизованного ввода, таким образом все последующие сигналы я буду проверять на не буферизованном вводе, так как в бесконечном цикле используя буффер программа просто ничего не запишет.
SIGINT(^C) - программа остановила выполнение, записав в документ все что успела насчитать.
SIGQUIT(^\) - остановила выполнение записав что-то в дамб памяти, записав все что успела, буферизованная(еще одна проверка) ничего не записала.
SITTSTP(^Z),SIGCONT(-18),SIGKILL(-9) - программа перестала выводить и записывать в файл после сигнала SIGTSTP, после сигнала SIGCONT, продолжила выполнение, вывод в консоль и запись в файл, после сигнала SIGKILL процесс завершился, данные в файле сохранились.
SIGSTOP(-19) - я ожидал обычного завершения программы, однако она приостановилась так же как евсли бы был вызван сигнал SIGSTSP и после него так же можно было восстановить выполнение программы.
SIGTERM(-15) - программа завершила процесс выполнения, записав данные в файл
SIGABRT(-6) - программа завершила процесс выполнения, с запись в дамб памяти
Программа использующая буфферизованный ввод ничего не записала ни при одном сигнале, видимо, так как не закрывался файл, а следовательно буффер не перезаписывал все в него, поэтому скрины все только на небуферизованный ввод за исключением пары раз в качестве демонстрации не записи.
